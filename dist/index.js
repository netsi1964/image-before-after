(()=>{"use strict";const t=document.createElement("template");class e extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.attachShadow({mode:"open"});this.setAttribute("shadowRoot",e),t.innerHTML='<style>\n:host {\n    --before-text: \'Before\';\n    --after-text: \'After\';\n    --width: 0px;\n    --width: 200px;\n    --height: 200px;\n  }\n  :host {\n    position: relative;\n    width: var(--width);\n    height: var(--height);\n    display: block;\n  }\n  .images {\n    cursor: col-resize;\n  }\n  .img {\n    position: absolute;\n  }\n  .after {\n    z-index: 10;\n    top: 0;\n    background-color: orange;\n  }\n  .before {\n    top: 0;\n    background-color: white;\n  }\n  .before:before {\n    color: hsla(0, 0%, 100%, 0.6);\n    text-shadow: 0 0 5px black;\n    content: var(--before-text);\n    position: absolute;\n    margin-left: calc(100% - 56px);\n    margin-top: 10px;\n  }\n  .after:after {\n    color: hsla(0, 0%, 100%, 0.6);\n    text-shadow: 0 0 5px black;\n    content: var(--after-text);\n    margin-top: 10px;\n    margin-left: 10px;\n    position: absolute;\n  }\n  .text {\n    padding: 4px;\n    position: absolute;\n    z-index: 15;\n    bottom: 10px;\n    right: 10px;\n    font-size: 14pt;\n    opacity: 0.6;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  </style><div class="images"> <div class="before img"></div> <div class="after img"></div> <img class="dummy"/> <div class="text"></div> </div> ',e.appendChild(t.content.cloneNode(!0)),this.eleBefore=e.querySelector(".before"),this.eleAfter=e.querySelector(".after"),this.eleDummy=e.querySelector(".dummy"),this.eleText=e.querySelector(".text"),this.text=this.hasAttribute("text")?this.getAttribute("text").trim():"",""===this.text&&(this.eleText.style.display="none"),this.eleText.innerHTML=this.text,this.change.bind(this),this.before=this.hasAttribute("before")?this.getAttribute("before"):"https://dummyimage.com/600x400/ffa500/fff.png",this.after=this.hasAttribute("after")?this.getAttribute("after"):"https://dummyimage.com/600x400/ffffff/000.png",this.eleDummy.addEventListener("load",(()=>{this.width=getComputedStyle(this.eleDummy).width,this.height=getComputedStyle(this.eleDummy).height,this.init()})),this.eleDummy.src=this.before}init(){this.eleDummy.remove();const t=this.width,e=this.height;this.eleBefore.style.backgroundImage=`url(${this.before})`,this.eleBefore.style.width=t,this.eleBefore.style.height=e,this.eleAfter.style.backgroundImage=`url(${this.after})`,this.eleAfter.style.width=t,this.eleAfter.style.height=e,this.style.width=t,this.style.height=e,this.style.position="relative",this.shadowRoot.addEventListener("mousemove",(t=>{t.preventDefault(),t.stopPropagation(),this.change(t.clientX)})),this.shadowRoot.addEventListener("touchmove",(t=>(t.preventDefault(),t.stopPropagation(),this.change(t.touches[0].clientX),!1)))}change(t){this.offsetX=this.getClientRects()[0].x,this.eleAfter.style.width=`${Math.min(parseInt(this.width),t-this.offsetX)}px`}}window.customElements.define("image-before-after",e)})();